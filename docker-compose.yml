version: "3.9"
services:
  frontend:
    image: frontend
    container_name: frontend-container
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    expose:
      - 3000

    networks:
      - web-app
    deploy:
      restart_policy:
        condition: always

  redisfrontend:
    image: redis/redis-stack:latest
    container_name: redisfrontend
    ports:
      #   - 127.0.0.1:6000:6379
      - 8003:8001
    expose:
      - 6379
    environment:
      - REDIS_ARGS=--save 30 1 --save 10 10 --bind 0.0.0.0
    volumes:
      - ./redis/data:/data
    networks:
      - web-app
    deploy:
      restart_policy:
        condition: always

  backend:
    image: backend
    container_name: backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - 9000:9000
    expose:
      - 9000
    volumes:
      - ./backend:/app/backend
    depends_on:
      - redisfrontend
    networks:
      - web-app
    deploy:
      restart_policy:
        condition: always

  nginx:
    image: nginx:latest
    volumes:
      - ./conf.d:/etc/nginx/conf.d
    ports:
      - 84:80
    networks:
      - web-app
    deploy:
      restart_policy:
        condition: always

networks:
  web-app:
    driver: bridge
